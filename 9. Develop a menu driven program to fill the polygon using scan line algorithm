#include<stdio.h>
#include<GL/glut.h>

float x1=200,y1=200,x2=100,y2=300,x3=200,y3=400,x4=300,y4=300;
float le[500],re[500];
int flag =0;
//mapping details
void init(){
glMatrixMode(GL_PROJECTION);
   gluOrtho2D(0,500,0,500);
glMatrixMode(GL_MODELVIEW);
}

void edge(float x1,float y1,float x2,float y2)
{
float m = (x2-x1)/(y2-y1);
float x = x1;
for(int i=y1;i<y2;i++)
{
if(x<le[i]) le[i] = x;
if(x>re[i]) re[i] = x;
x = x + m;
}
}

void scanfill()
{
for(int i=0;i<500;i++)
{
le[i]=500;
re[i]=0;
}
edge(x1,y1,x2,y2);
edge(x2,y2,x3,y3);
edge(x4,y4,x3,y3);
edge(x1,y1,x4,y4);

for(int i=0;i<500;i++)
{
if(le[i]<re[i])
for(int j=le[i];j<re[i];j++)
{
glBegin(GL_POINTS);
glVertex2f(j,i);
glEnd();
}
}
}
//object

void display(){
glClearColor(1,1,1,1);
glClear(GL_COLOR_BUFFER_BIT);

if(flag==1){
glColor3f(1,0,0);
glBegin(GL_LINE_LOOP);
glVertex2f(x1,y1);
glVertex2f(x2,y2);
glVertex2f(x3,y3);
glVertex2f(x4,y4);
glEnd();
}
if(flag==2){
glColor3f(1,0,0);
glBegin(GL_LINE_LOOP);
glVertex2f(x1,y1);
glVertex2f(x2,y2);
glVertex2f(x3,y3);
glVertex2f(x4,y4);
glEnd();
glColor3f(1,1,0);
scanfill();
}
glFlush();
}

void menu(int id)
{
if(id==1)
flag=1;
if(id==2)
flag=2;
if(id==3)
exit(0);
display();
}
//main function
int main(int argc,char **argv){

glutInit(&argc,argv);
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);

glutInitWindowSize(500,500);
glutInitWindowPosition(0,0);
glutCreateWindow("1CR20CS151");

init();
glutDisplayFunc(display);

glutCreateMenu(menu);
glutAddMenuEntry("OUTLINE",1);
glutAddMenuEntry("FILL COLOR",2);
glutAddMenuEntry("Exit",3);
glutAttachMenu(GLUT_RIGHT_BUTTON);

glutMainLoop();
return 0;
}
